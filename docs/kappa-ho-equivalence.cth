function := { |func|
  {
    { |*(leftargs) ; *(rightargs), **(kwargs)|
        func(*(leftargs); *(rightargs), **(kwargs))
    }
  }(|return-cont:cont)
}
return := { |var| .return-cont var }

while := { |test, body|
  { while test body } if? (test() and. { { body(); true }(|loop-cont:cont) })
}
break := { .loop-cont false }
continue := { .loop-cont true }

try := { |body, handler|
  { body() }(|try-cont:cont, try-handler:handler, old-try-cont:.try-cont,
      old-try-handler:.try-handler)
}
throw := { |e|
  .try-cont .try-handler(e
      |try-cont:.old-try-cont, try-handler:.old-try-handler)
}

